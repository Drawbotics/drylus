// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Margin matches snapshot when has a different size on each side 1`] = `
.css-ri7x9k-Margin__root-Margin__resetMargin {
  margin: 24px;
  margin: 0;
}

@media only screen and (max-width:768px) {
  .css-ri7x9k-Margin__root-Margin__resetMargin {
    margin: 16px;
  }
}

@media only screen and (max-width:768px) {
  .css-ri7x9k-Margin__root-Margin__resetMargin {
    margin: 0;
  }
}

<div
  className="undefined css-ri7x9k-Margin__root-Margin__resetMargin"
>
  Content
</div>
`;

exports[`Margin matches snapshot when has a size only on 1 side 1`] = `
.css-ri7x9k-Margin__root-Margin__resetMargin {
  margin: 24px;
  margin: 0;
}

@media only screen and (max-width:768px) {
  .css-ri7x9k-Margin__root-Margin__resetMargin {
    margin: 16px;
  }
}

@media only screen and (max-width:768px) {
  .css-ri7x9k-Margin__root-Margin__resetMargin {
    margin: 0;
  }
}

<div
  className="css-ri7x9k-Margin__root-Margin__resetMargin"
>
  Content
</div>
`;

exports[`Margin matches snapshot when has a uniform size 1`] = `
.css-e35gzl-Margin__root {
  margin: 24px;
}

@media only screen and (max-width:768px) {
  .css-e35gzl-Margin__root {
    margin: 16px;
  }
}

<div
  className="css-e35gzl-Margin__root"
>
  Content
</div>
`;

exports[`Margin matches snapshot when has vertical and horizontal sizes 1`] = `
.css-ri7x9k-Margin__root-Margin__resetMargin {
  margin: 24px;
  margin: 0;
}

@media only screen and (max-width:768px) {
  .css-ri7x9k-Margin__root-Margin__resetMargin {
    margin: 16px;
  }
}

@media only screen and (max-width:768px) {
  .css-ri7x9k-Margin__root-Margin__resetMargin {
    margin: 0;
  }
}

<div
  className="undefined css-ri7x9k-Margin__root-Margin__resetMargin"
>
  Content
</div>
`;
